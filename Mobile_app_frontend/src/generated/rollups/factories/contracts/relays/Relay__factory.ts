/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Relay, RelayInterface } from "../../../contracts/relays/Relay";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IInputBox",
        name: "_inputBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getInputBox",
    outputs: [
      {
        internalType: "contract IInputBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161012738038061012783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051609f6100886000396000602e0152609f6000f3fe6080604052348015600f57600080fd5b506004361060275760003560e01c8062aace9a14602c575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006040516001600160a01b03909116815260200160405180910390f3fea2646970667358221220517249cd3d40b3ff174161034edf38da27b153fb3cd707f8c0cdac9699cf34ed64736f6c63430008130033";

type RelayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Relay__factory extends ContractFactory {
  constructor(...args: RelayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _inputBox: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Relay> {
    return super.deploy(_inputBox, overrides || {}) as Promise<Relay>;
  }
  override getDeployTransaction(
    _inputBox: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_inputBox, overrides || {});
  }
  override attach(address: string): Relay {
    return super.attach(address) as Relay;
  }
  override connect(signer: Signer): Relay__factory {
    return super.connect(signer) as Relay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayInterface {
    return new utils.Interface(_abi) as RelayInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Relay {
    return new Contract(address, _abi, signerOrProvider) as Relay;
  }
}
