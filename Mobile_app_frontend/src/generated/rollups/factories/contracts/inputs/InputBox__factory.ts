/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  InputBox,
  InputBoxInterface,
} from "../../../contracts/inputs/InputBox";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dapp",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "inboxInputIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "InputAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dapp",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_input",
        type: "bytes",
      },
    ],
    name: "addInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dapp",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getInputHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dapp",
        type: "address",
      },
    ],
    name: "getNumberOfInputs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103f2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631789cd631461004657806361a93c871461006b578063677087c914610094575b600080fd5b610059610054366004610287565b6100a7565b60405190815260200160405180910390f35b61005961007936600461030a565b6001600160a01b031660009081526020819052604090205490565b6100596100a236600461032c565b61013b565b6001600160a01b03831660009081526020819052604081208054826100d0334342898987610178565b83546001810185556000858152602090200181905560405190915082906001600160a01b038916907f6aaa400068bf4ca337265e2a1e1e841f66b8597fd5b452fdc52a44bed28a0784906101299033908b908b90610356565b60405180910390a39695505050505050565b6001600160a01b038216600090815260208190526040812080548390811061016557610165610396565b9060005260206000200154905092915050565b600063020000008311156101d25760405162461bcd60e51b815260206004820152601860248201527f696e707574206c656e3a205b302c647269766553697a655d0000000000000000604482015260640160405180910390fd5b604080516001600160a01b03891660208201529081018790526060810186905260006080820181905260a082018490529060c001604051602081830303815290604052805190602001209050600085856040516102309291906103ac565b604080519182900382206020808401959095528282015280518083038201815260609092019052805192019190912098975050505050505050565b80356001600160a01b038116811461028257600080fd5b919050565b60008060006040848603121561029c57600080fd5b6102a58461026b565b9250602084013567ffffffffffffffff808211156102c257600080fd5b818601915086601f8301126102d657600080fd5b8135818111156102e557600080fd5b8760208285010111156102f757600080fd5b6020830194508093505050509250925092565b60006020828403121561031c57600080fd5b6103258261026b565b9392505050565b6000806040838503121561033f57600080fd5b6103488361026b565b946020939093013593505050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052603260045260246000fd5b818382376000910190815291905056fea2646970667358221220fd50acf7a83485b79e97d1cd8af8cb872bd7a16cc845951161e92fbbb7252fbb64736f6c63430008130033";

type InputBoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InputBoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InputBox__factory extends ContractFactory {
  constructor(...args: InputBoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<InputBox> {
    return super.deploy(overrides || {}) as Promise<InputBox>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InputBox {
    return super.attach(address) as InputBox;
  }
  override connect(signer: Signer): InputBox__factory {
    return super.connect(signer) as InputBox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InputBoxInterface {
    return new utils.Interface(_abi) as InputBoxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InputBox {
    return new Contract(address, _abi, signerOrProvider) as InputBox;
  }
}
