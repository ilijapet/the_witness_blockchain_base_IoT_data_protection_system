/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Authority,
  AuthorityInterface,
} from "../../../../contracts/consensus/authority/Authority";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IInputBox",
        name: "_inputBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "application",
        type: "address",
      },
    ],
    name: "ApplicationJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IInputBox",
        name: "inputBox",
        type: "address",
      },
    ],
    name: "ConsensusCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IHistory",
        name: "history",
        type: "address",
      },
    ],
    name: "NewHistory",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dapp",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_proofContext",
        type: "bytes",
      },
    ],
    name: "getClaim",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHistory",
    outputs: [
      {
        internalType: "contract IHistory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "join",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_consensus",
        type: "address",
      },
    ],
    name: "migrateHistoryToConsensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHistory",
        name: "_history",
        type: "address",
      },
    ],
    name: "setHistory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_claimData",
        type: "bytes",
      },
    ],
    name: "submitClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawERC20Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109ef3803806109ef83398101604081905261002f916101da565b6100383361009b565b336001600160a01b0383161461005157610051826100eb565b604080516001600160a01b038085168252831660208201527f583f764398dc1f7529b3e4472cb331312f6b6d76744da14476f571a330d36e23910160405180910390a15050610214565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100f3610169565b6001600160a01b03811661015d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101668161009b565b50565b6000546001600160a01b031633146101c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610154565b565b6001600160a01b038116811461016657600080fd5b600080604083850312156101ed57600080fd5b82516101f8816101c5565b6020840151909250610209816101c5565b809150509250929050565b6107cc806102236000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b688a36311610066578063b688a3631461010e578063bcdd1e1314610116578063d79a824014610129578063ddfdfbb014610157578063f2fde38b1461016a57600080fd5b8063159c5ea1146100a3578063715018a6146100b85780638da5cb5b146100c05780639368a3d3146100ea578063aa15efc8146100fd575b600080fd5b6100b66100b136600461058e565b61017d565b005b6100b66101d9565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100f836600461058e565b6101ed565b6001546001600160a01b03166100cd565b6100b6610257565b6100b66101243660046105b2565b61028c565b61013c61013736600461063c565b61035d565b604080519384526020840192909252908201526060016100e1565b6100b6610165366004610691565b6103e6565b6100b661017836600461058e565b610456565b6101856104cf565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f2bcd43869347a1d42f97ac6042f3d129817abd05a6125f9750fe3724e321d23e9060200160405180910390a150565b6101e16104cf565b6101eb6000610529565b565b6101f56104cf565b60015460405163fc41168360e01b81526001600160a01b0383811660048301529091169063fc41168390602401600060405180830381600087803b15801561023c57600080fd5b505af1158015610250573d6000803e3d6000fd5b5050505050565b6040513381527f27c2b702d3bff195a18baca2daf00b20a986177c5f1449af4e2d46a3c3e02ce59060200160405180910390a1565b6102946104cf565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156102e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030791906106d3565b6103585760405162461bcd60e51b815260206004820152601c60248201527f417574686f726974793a207769746864726177616c206661696c65640000000060448201526064015b60405180910390fd5b505050565b60015460405163035e6a0960e61b8152600091829182916001600160a01b03169063d79a8240906103969089908990899060040161071e565b606060405180830381865afa1580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d7919061074c565b92509250925093509350939050565b6103ee6104cf565b600154604051630ddfdfbb60e41b81526001600160a01b039091169063ddfdfbb090610420908590859060040161077a565b600060405180830381600087803b15801561043a57600080fd5b505af115801561044e573d6000803e3d6000fd5b505050505050565b61045e6104cf565b6001600160a01b0381166104c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034f565b6104cc81610529565b50565b6000546001600160a01b031633146101eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146104cc57600080fd5b6000602082840312156105a057600080fd5b81356105ab81610579565b9392505050565b6000806000606084860312156105c757600080fd5b83356105d281610579565b925060208401356105e281610579565b929592945050506040919091013590565b60008083601f84011261060557600080fd5b50813567ffffffffffffffff81111561061d57600080fd5b60208301915083602082850101111561063557600080fd5b9250929050565b60008060006040848603121561065157600080fd5b833561065c81610579565b9250602084013567ffffffffffffffff81111561067857600080fd5b610684868287016105f3565b9497909650939450505050565b600080602083850312156106a457600080fd5b823567ffffffffffffffff8111156106bb57600080fd5b6106c7858286016105f3565b90969095509350505050565b6000602082840312156106e557600080fd5b815180151581146105ab57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038416815260406020820181905260009061074390830184866106f5565b95945050505050565b60008060006060848603121561076157600080fd5b8351925060208401519150604084015190509250925092565b60208152600061078e6020830184866106f5565b94935050505056fea264697066735822122021f66c26bc1cded7ab5457f04d0a74c5257b6aa88e7d69d7f9ad0713ba4679e664736f6c63430008130033";

type AuthorityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuthorityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Authority__factory extends ContractFactory {
  constructor(...args: AuthorityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: string,
    _inputBox: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Authority> {
    return super.deploy(
      _owner,
      _inputBox,
      overrides || {}
    ) as Promise<Authority>;
  }
  override getDeployTransaction(
    _owner: string,
    _inputBox: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _inputBox, overrides || {});
  }
  override attach(address: string): Authority {
    return super.attach(address) as Authority;
  }
  override connect(signer: Signer): Authority__factory {
    return super.connect(signer) as Authority__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuthorityInterface {
    return new utils.Interface(_abi) as AuthorityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Authority {
    return new Contract(address, _abi, signerOrProvider) as Authority;
  }
}
